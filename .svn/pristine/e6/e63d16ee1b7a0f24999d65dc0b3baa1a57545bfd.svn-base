<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
       default-lazy-init="true">

	<description>Spring公共配置 </description>
	
    <jee:jndi-lookup id="cmsDataSource" jndi-name="jdbc/CMS"/>
    
    <!-- 导入core包配置文件 -->
    <import resource="classpath:applicationContext-shiro.xml"/>
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="net.chinaott.cms">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<bean id="cmsEntityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="cmsDataSource" />
		<property name="jpaVendorAdapter" ref="cmsHibernateJpaVendorAdapter" />
		<property name="packagesToScan" value="net.chinaott.cms" />
		<property name="jpaProperties">
			<props>
				<!-- 命名规则 My_NAME->MyName -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>
	<bean id="cmsHibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect" class="com.ysten.utils.hibernate.HibernateUtil">
				<constructor-arg ref="cmsDataSource" />
			</bean>
		</property>
		<property name="showSql" value="true" />
	</bean>
	<!-- MyBatis配置 -->
	<bean id="cmsSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="cmsDataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="net.chinaott.cms.core.*.entity" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath*:/mybatis/*/*Mapper.xml" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描dao -->
		<property name="basePackage" value="net.chinaott.cms.core" />
		<!-- 配置多数据源时，一定用sqlSessionFactoryBeanName指定sqlSessionFactoryBeanName或是sqlSessionTemplateBeanName -->
		<property name="sqlSessionFactoryBeanName" value="cmsSqlSessionFactory" />
		<property name="annotationClass" value="net.chinaott.cms.core.common.repository.mybatis.MyBatisRepository" />
	</bean>


	<!-- Jpa 事务配置 -->
	<bean id="cmsTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="cmsEntityManagerFactory" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="cmsTransactionManager" proxy-target-class="true"/>
    <!--扫描jpa包-->
    <jpa:repositories base-package="net.chinaott.cms" transaction-manager-ref="cmsTransactionManager" entity-manager-factory-ref="cmsEntityManagerFactory" />
	<!-- JSR303 Validator定义 -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	
	<!-- Ehcache 配置 -->
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache/ehcache.xml" />
	</bean>
	
	<bean id="cache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager" ref="cacheManager" />
		<!--dictCache ehcache/ehcache.xml 中 cache 的名称-->
		<property name="cacheName" value="dictCache" />
	</bean>
</beans>